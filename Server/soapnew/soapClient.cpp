/* soapClient.cpp
   Generated by gSOAP 2.8.117 for taskInfo.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.117 2021-12-18 16:24:44 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__addProduct(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__addProduct *lkf2__addProduct_, lkf2__addProductResponse &lkf2__addProductResponse_)
{	if (soap_send___lkf1__addProduct(soap, soap_endpoint, soap_action, lkf2__addProduct_) || soap_recv___lkf1__addProduct(soap, lkf2__addProductResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__addProduct(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__addProduct *lkf2__addProduct_)
{	struct __lkf1__addProduct soap_tmp___lkf1__addProduct;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__addProduct.lkf2__addProduct_ = lkf2__addProduct_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__addProduct(soap, &soap_tmp___lkf1__addProduct);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__addProduct(soap, &soap_tmp___lkf1__addProduct, "-lkf1:addProduct", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__addProduct(soap, &soap_tmp___lkf1__addProduct, "-lkf1:addProduct", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__addProduct(struct soap *soap, lkf2__addProductResponse &lkf2__addProductResponse_)
{
	lkf2__addProductResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__addProductResponse_.soap_get(soap, "lkf2:addProductResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__deleteProductTypeByName(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__deleteProductTypeByName *lkf2__deleteProductTypeByName_, lkf2__deleteProductTypeByNameResponse &lkf2__deleteProductTypeByNameResponse_)
{	if (soap_send___lkf1__deleteProductTypeByName(soap, soap_endpoint, soap_action, lkf2__deleteProductTypeByName_) || soap_recv___lkf1__deleteProductTypeByName(soap, lkf2__deleteProductTypeByNameResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__deleteProductTypeByName(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__deleteProductTypeByName *lkf2__deleteProductTypeByName_)
{	struct __lkf1__deleteProductTypeByName soap_tmp___lkf1__deleteProductTypeByName;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__deleteProductTypeByName.lkf2__deleteProductTypeByName_ = lkf2__deleteProductTypeByName_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__deleteProductTypeByName(soap, &soap_tmp___lkf1__deleteProductTypeByName);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__deleteProductTypeByName(soap, &soap_tmp___lkf1__deleteProductTypeByName, "-lkf1:deleteProductTypeByName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__deleteProductTypeByName(soap, &soap_tmp___lkf1__deleteProductTypeByName, "-lkf1:deleteProductTypeByName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__deleteProductTypeByName(struct soap *soap, lkf2__deleteProductTypeByNameResponse &lkf2__deleteProductTypeByNameResponse_)
{
	lkf2__deleteProductTypeByNameResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__deleteProductTypeByNameResponse_.soap_get(soap, "lkf2:deleteProductTypeByNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__getOrderList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getOrderList *lkf2__getOrderList_, lkf2__getOrderListResponse &lkf2__getOrderListResponse_)
{	if (soap_send___lkf1__getOrderList(soap, soap_endpoint, soap_action, lkf2__getOrderList_) || soap_recv___lkf1__getOrderList(soap, lkf2__getOrderListResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__getOrderList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getOrderList *lkf2__getOrderList_)
{	struct __lkf1__getOrderList soap_tmp___lkf1__getOrderList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__getOrderList.lkf2__getOrderList_ = lkf2__getOrderList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__getOrderList(soap, &soap_tmp___lkf1__getOrderList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__getOrderList(soap, &soap_tmp___lkf1__getOrderList, "-lkf1:getOrderList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__getOrderList(soap, &soap_tmp___lkf1__getOrderList, "-lkf1:getOrderList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__getOrderList(struct soap *soap, lkf2__getOrderListResponse &lkf2__getOrderListResponse_)
{
	lkf2__getOrderListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__getOrderListResponse_.soap_get(soap, "lkf2:getOrderListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__getProductListByInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getProductListByInfo *lkf2__getProductListByInfo_, lkf2__getProductListByInfoResponse &lkf2__getProductListByInfoResponse_)
{	if (soap_send___lkf1__getProductListByInfo(soap, soap_endpoint, soap_action, lkf2__getProductListByInfo_) || soap_recv___lkf1__getProductListByInfo(soap, lkf2__getProductListByInfoResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__getProductListByInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getProductListByInfo *lkf2__getProductListByInfo_)
{	struct __lkf1__getProductListByInfo soap_tmp___lkf1__getProductListByInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__getProductListByInfo.lkf2__getProductListByInfo_ = lkf2__getProductListByInfo_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__getProductListByInfo(soap, &soap_tmp___lkf1__getProductListByInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__getProductListByInfo(soap, &soap_tmp___lkf1__getProductListByInfo, "-lkf1:getProductListByInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__getProductListByInfo(soap, &soap_tmp___lkf1__getProductListByInfo, "-lkf1:getProductListByInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__getProductListByInfo(struct soap *soap, lkf2__getProductListByInfoResponse &lkf2__getProductListByInfoResponse_)
{
	lkf2__getProductListByInfoResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__getProductListByInfoResponse_.soap_get(soap, "lkf2:getProductListByInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__updateClient(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__updateClient *lkf2__updateClient_, lkf2__updateClientResponse &lkf2__updateClientResponse_)
{	if (soap_send___lkf1__updateClient(soap, soap_endpoint, soap_action, lkf2__updateClient_) || soap_recv___lkf1__updateClient(soap, lkf2__updateClientResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__updateClient(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__updateClient *lkf2__updateClient_)
{	struct __lkf1__updateClient soap_tmp___lkf1__updateClient;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__updateClient.lkf2__updateClient_ = lkf2__updateClient_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__updateClient(soap, &soap_tmp___lkf1__updateClient);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__updateClient(soap, &soap_tmp___lkf1__updateClient, "-lkf1:updateClient", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__updateClient(soap, &soap_tmp___lkf1__updateClient, "-lkf1:updateClient", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__updateClient(struct soap *soap, lkf2__updateClientResponse &lkf2__updateClientResponse_)
{
	lkf2__updateClientResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__updateClientResponse_.soap_get(soap, "lkf2:updateClientResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__deleteClientByNameAndPwd(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__deleteClientByNameAndPwd *lkf2__deleteClientByNameAndPwd_, lkf2__deleteClientByNameAndPwdResponse &lkf2__deleteClientByNameAndPwdResponse_)
{	if (soap_send___lkf1__deleteClientByNameAndPwd(soap, soap_endpoint, soap_action, lkf2__deleteClientByNameAndPwd_) || soap_recv___lkf1__deleteClientByNameAndPwd(soap, lkf2__deleteClientByNameAndPwdResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__deleteClientByNameAndPwd(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__deleteClientByNameAndPwd *lkf2__deleteClientByNameAndPwd_)
{	struct __lkf1__deleteClientByNameAndPwd soap_tmp___lkf1__deleteClientByNameAndPwd;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__deleteClientByNameAndPwd.lkf2__deleteClientByNameAndPwd_ = lkf2__deleteClientByNameAndPwd_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__deleteClientByNameAndPwd(soap, &soap_tmp___lkf1__deleteClientByNameAndPwd);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__deleteClientByNameAndPwd(soap, &soap_tmp___lkf1__deleteClientByNameAndPwd, "-lkf1:deleteClientByNameAndPwd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__deleteClientByNameAndPwd(soap, &soap_tmp___lkf1__deleteClientByNameAndPwd, "-lkf1:deleteClientByNameAndPwd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__deleteClientByNameAndPwd(struct soap *soap, lkf2__deleteClientByNameAndPwdResponse &lkf2__deleteClientByNameAndPwdResponse_)
{
	lkf2__deleteClientByNameAndPwdResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__deleteClientByNameAndPwdResponse_.soap_get(soap, "lkf2:deleteClientByNameAndPwdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__deleteProductByInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__deleteProductByInfo *lkf2__deleteProductByInfo_, lkf2__deleteProductByInfoResponse &lkf2__deleteProductByInfoResponse_)
{	if (soap_send___lkf1__deleteProductByInfo(soap, soap_endpoint, soap_action, lkf2__deleteProductByInfo_) || soap_recv___lkf1__deleteProductByInfo(soap, lkf2__deleteProductByInfoResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__deleteProductByInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__deleteProductByInfo *lkf2__deleteProductByInfo_)
{	struct __lkf1__deleteProductByInfo soap_tmp___lkf1__deleteProductByInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__deleteProductByInfo.lkf2__deleteProductByInfo_ = lkf2__deleteProductByInfo_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__deleteProductByInfo(soap, &soap_tmp___lkf1__deleteProductByInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__deleteProductByInfo(soap, &soap_tmp___lkf1__deleteProductByInfo, "-lkf1:deleteProductByInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__deleteProductByInfo(soap, &soap_tmp___lkf1__deleteProductByInfo, "-lkf1:deleteProductByInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__deleteProductByInfo(struct soap *soap, lkf2__deleteProductByInfoResponse &lkf2__deleteProductByInfoResponse_)
{
	lkf2__deleteProductByInfoResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__deleteProductByInfoResponse_.soap_get(soap, "lkf2:deleteProductByInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__getOrderLikeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getOrderLikeList *lkf2__getOrderLikeList_, lkf2__getOrderLikeListResponse &lkf2__getOrderLikeListResponse_)
{	if (soap_send___lkf1__getOrderLikeList(soap, soap_endpoint, soap_action, lkf2__getOrderLikeList_) || soap_recv___lkf1__getOrderLikeList(soap, lkf2__getOrderLikeListResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__getOrderLikeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getOrderLikeList *lkf2__getOrderLikeList_)
{	struct __lkf1__getOrderLikeList soap_tmp___lkf1__getOrderLikeList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__getOrderLikeList.lkf2__getOrderLikeList_ = lkf2__getOrderLikeList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__getOrderLikeList(soap, &soap_tmp___lkf1__getOrderLikeList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__getOrderLikeList(soap, &soap_tmp___lkf1__getOrderLikeList, "-lkf1:getOrderLikeList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__getOrderLikeList(soap, &soap_tmp___lkf1__getOrderLikeList, "-lkf1:getOrderLikeList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__getOrderLikeList(struct soap *soap, lkf2__getOrderLikeListResponse &lkf2__getOrderLikeListResponse_)
{
	lkf2__getOrderLikeListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__getOrderLikeListResponse_.soap_get(soap, "lkf2:getOrderLikeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__getClientLikeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getClientLikeList *lkf2__getClientLikeList_, lkf2__getClientLikeListResponse &lkf2__getClientLikeListResponse_)
{	if (soap_send___lkf1__getClientLikeList(soap, soap_endpoint, soap_action, lkf2__getClientLikeList_) || soap_recv___lkf1__getClientLikeList(soap, lkf2__getClientLikeListResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__getClientLikeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getClientLikeList *lkf2__getClientLikeList_)
{	struct __lkf1__getClientLikeList soap_tmp___lkf1__getClientLikeList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__getClientLikeList.lkf2__getClientLikeList_ = lkf2__getClientLikeList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__getClientLikeList(soap, &soap_tmp___lkf1__getClientLikeList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__getClientLikeList(soap, &soap_tmp___lkf1__getClientLikeList, "-lkf1:getClientLikeList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__getClientLikeList(soap, &soap_tmp___lkf1__getClientLikeList, "-lkf1:getClientLikeList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__getClientLikeList(struct soap *soap, lkf2__getClientLikeListResponse &lkf2__getClientLikeListResponse_)
{
	lkf2__getClientLikeListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__getClientLikeListResponse_.soap_get(soap, "lkf2:getClientLikeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__getProductTypeByProName(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getProductTypeByProName *lkf2__getProductTypeByProName_, lkf2__getProductTypeByProNameResponse &lkf2__getProductTypeByProNameResponse_)
{	if (soap_send___lkf1__getProductTypeByProName(soap, soap_endpoint, soap_action, lkf2__getProductTypeByProName_) || soap_recv___lkf1__getProductTypeByProName(soap, lkf2__getProductTypeByProNameResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__getProductTypeByProName(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getProductTypeByProName *lkf2__getProductTypeByProName_)
{	struct __lkf1__getProductTypeByProName soap_tmp___lkf1__getProductTypeByProName;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__getProductTypeByProName.lkf2__getProductTypeByProName_ = lkf2__getProductTypeByProName_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__getProductTypeByProName(soap, &soap_tmp___lkf1__getProductTypeByProName);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__getProductTypeByProName(soap, &soap_tmp___lkf1__getProductTypeByProName, "-lkf1:getProductTypeByProName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__getProductTypeByProName(soap, &soap_tmp___lkf1__getProductTypeByProName, "-lkf1:getProductTypeByProName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__getProductTypeByProName(struct soap *soap, lkf2__getProductTypeByProNameResponse &lkf2__getProductTypeByProNameResponse_)
{
	lkf2__getProductTypeByProNameResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__getProductTypeByProNameResponse_.soap_get(soap, "lkf2:getProductTypeByProNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__getClientList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getClientList *lkf2__getClientList_, lkf2__getClientListResponse &lkf2__getClientListResponse_)
{	if (soap_send___lkf1__getClientList(soap, soap_endpoint, soap_action, lkf2__getClientList_) || soap_recv___lkf1__getClientList(soap, lkf2__getClientListResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__getClientList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getClientList *lkf2__getClientList_)
{	struct __lkf1__getClientList soap_tmp___lkf1__getClientList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__getClientList.lkf2__getClientList_ = lkf2__getClientList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__getClientList(soap, &soap_tmp___lkf1__getClientList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__getClientList(soap, &soap_tmp___lkf1__getClientList, "-lkf1:getClientList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__getClientList(soap, &soap_tmp___lkf1__getClientList, "-lkf1:getClientList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__getClientList(struct soap *soap, lkf2__getClientListResponse &lkf2__getClientListResponse_)
{
	lkf2__getClientListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__getClientListResponse_.soap_get(soap, "lkf2:getClientListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__getOrderListByInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getOrderListByInfo *lkf2__getOrderListByInfo_, lkf2__getOrderListByInfoResponse &lkf2__getOrderListByInfoResponse_)
{	if (soap_send___lkf1__getOrderListByInfo(soap, soap_endpoint, soap_action, lkf2__getOrderListByInfo_) || soap_recv___lkf1__getOrderListByInfo(soap, lkf2__getOrderListByInfoResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__getOrderListByInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getOrderListByInfo *lkf2__getOrderListByInfo_)
{	struct __lkf1__getOrderListByInfo soap_tmp___lkf1__getOrderListByInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__getOrderListByInfo.lkf2__getOrderListByInfo_ = lkf2__getOrderListByInfo_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__getOrderListByInfo(soap, &soap_tmp___lkf1__getOrderListByInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__getOrderListByInfo(soap, &soap_tmp___lkf1__getOrderListByInfo, "-lkf1:getOrderListByInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__getOrderListByInfo(soap, &soap_tmp___lkf1__getOrderListByInfo, "-lkf1:getOrderListByInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__getOrderListByInfo(struct soap *soap, lkf2__getOrderListByInfoResponse &lkf2__getOrderListByInfoResponse_)
{
	lkf2__getOrderListByInfoResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__getOrderListByInfoResponse_.soap_get(soap, "lkf2:getOrderListByInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__addProductType(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__addProductType *lkf2__addProductType_, lkf2__addProductTypeResponse &lkf2__addProductTypeResponse_)
{	if (soap_send___lkf1__addProductType(soap, soap_endpoint, soap_action, lkf2__addProductType_) || soap_recv___lkf1__addProductType(soap, lkf2__addProductTypeResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__addProductType(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__addProductType *lkf2__addProductType_)
{	struct __lkf1__addProductType soap_tmp___lkf1__addProductType;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__addProductType.lkf2__addProductType_ = lkf2__addProductType_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__addProductType(soap, &soap_tmp___lkf1__addProductType);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__addProductType(soap, &soap_tmp___lkf1__addProductType, "-lkf1:addProductType", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__addProductType(soap, &soap_tmp___lkf1__addProductType, "-lkf1:addProductType", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__addProductType(struct soap *soap, lkf2__addProductTypeResponse &lkf2__addProductTypeResponse_)
{
	lkf2__addProductTypeResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__addProductTypeResponse_.soap_get(soap, "lkf2:addProductTypeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__updateProductByInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__updateProductByInfo *lkf2__updateProductByInfo_, lkf2__updateProductByInfoResponse &lkf2__updateProductByInfoResponse_)
{	if (soap_send___lkf1__updateProductByInfo(soap, soap_endpoint, soap_action, lkf2__updateProductByInfo_) || soap_recv___lkf1__updateProductByInfo(soap, lkf2__updateProductByInfoResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__updateProductByInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__updateProductByInfo *lkf2__updateProductByInfo_)
{	struct __lkf1__updateProductByInfo soap_tmp___lkf1__updateProductByInfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__updateProductByInfo.lkf2__updateProductByInfo_ = lkf2__updateProductByInfo_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__updateProductByInfo(soap, &soap_tmp___lkf1__updateProductByInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__updateProductByInfo(soap, &soap_tmp___lkf1__updateProductByInfo, "-lkf1:updateProductByInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__updateProductByInfo(soap, &soap_tmp___lkf1__updateProductByInfo, "-lkf1:updateProductByInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__updateProductByInfo(struct soap *soap, lkf2__updateProductByInfoResponse &lkf2__updateProductByInfoResponse_)
{
	lkf2__updateProductByInfoResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__updateProductByInfoResponse_.soap_get(soap, "lkf2:updateProductByInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__getProductLikeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getProductLikeList *lkf2__getProductLikeList_, lkf2__getProductLikeListResponse &lkf2__getProductLikeListResponse_)
{	if (soap_send___lkf1__getProductLikeList(soap, soap_endpoint, soap_action, lkf2__getProductLikeList_) || soap_recv___lkf1__getProductLikeList(soap, lkf2__getProductLikeListResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__getProductLikeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getProductLikeList *lkf2__getProductLikeList_)
{	struct __lkf1__getProductLikeList soap_tmp___lkf1__getProductLikeList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__getProductLikeList.lkf2__getProductLikeList_ = lkf2__getProductLikeList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__getProductLikeList(soap, &soap_tmp___lkf1__getProductLikeList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__getProductLikeList(soap, &soap_tmp___lkf1__getProductLikeList, "-lkf1:getProductLikeList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__getProductLikeList(soap, &soap_tmp___lkf1__getProductLikeList, "-lkf1:getProductLikeList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__getProductLikeList(struct soap *soap, lkf2__getProductLikeListResponse &lkf2__getProductLikeListResponse_)
{
	lkf2__getProductLikeListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__getProductLikeListResponse_.soap_get(soap, "lkf2:getProductLikeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__addOrder(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__addOrder *lkf2__addOrder_, lkf2__addOrderResponse &lkf2__addOrderResponse_)
{	if (soap_send___lkf1__addOrder(soap, soap_endpoint, soap_action, lkf2__addOrder_) || soap_recv___lkf1__addOrder(soap, lkf2__addOrderResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__addOrder(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__addOrder *lkf2__addOrder_)
{	struct __lkf1__addOrder soap_tmp___lkf1__addOrder;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__addOrder.lkf2__addOrder_ = lkf2__addOrder_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__addOrder(soap, &soap_tmp___lkf1__addOrder);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__addOrder(soap, &soap_tmp___lkf1__addOrder, "-lkf1:addOrder", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__addOrder(soap, &soap_tmp___lkf1__addOrder, "-lkf1:addOrder", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__addOrder(struct soap *soap, lkf2__addOrderResponse &lkf2__addOrderResponse_)
{
	lkf2__addOrderResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__addOrderResponse_.soap_get(soap, "lkf2:addOrderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__getClientByNameAndPwd(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getClientByNameAndPwd *lkf2__getClientByNameAndPwd_, lkf2__getClientByNameAndPwdResponse &lkf2__getClientByNameAndPwdResponse_)
{	if (soap_send___lkf1__getClientByNameAndPwd(soap, soap_endpoint, soap_action, lkf2__getClientByNameAndPwd_) || soap_recv___lkf1__getClientByNameAndPwd(soap, lkf2__getClientByNameAndPwdResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__getClientByNameAndPwd(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getClientByNameAndPwd *lkf2__getClientByNameAndPwd_)
{	struct __lkf1__getClientByNameAndPwd soap_tmp___lkf1__getClientByNameAndPwd;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__getClientByNameAndPwd.lkf2__getClientByNameAndPwd_ = lkf2__getClientByNameAndPwd_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__getClientByNameAndPwd(soap, &soap_tmp___lkf1__getClientByNameAndPwd);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__getClientByNameAndPwd(soap, &soap_tmp___lkf1__getClientByNameAndPwd, "-lkf1:getClientByNameAndPwd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__getClientByNameAndPwd(soap, &soap_tmp___lkf1__getClientByNameAndPwd, "-lkf1:getClientByNameAndPwd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__getClientByNameAndPwd(struct soap *soap, lkf2__getClientByNameAndPwdResponse &lkf2__getClientByNameAndPwdResponse_)
{
	lkf2__getClientByNameAndPwdResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__getClientByNameAndPwdResponse_.soap_get(soap, "lkf2:getClientByNameAndPwdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__deleteShoppingCart(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__deleteShoppingCart *lkf2__deleteShoppingCart_, lkf2__deleteShoppingCartResponse &lkf2__deleteShoppingCartResponse_)
{	if (soap_send___lkf1__deleteShoppingCart(soap, soap_endpoint, soap_action, lkf2__deleteShoppingCart_) || soap_recv___lkf1__deleteShoppingCart(soap, lkf2__deleteShoppingCartResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__deleteShoppingCart(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__deleteShoppingCart *lkf2__deleteShoppingCart_)
{	struct __lkf1__deleteShoppingCart soap_tmp___lkf1__deleteShoppingCart;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__deleteShoppingCart.lkf2__deleteShoppingCart_ = lkf2__deleteShoppingCart_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__deleteShoppingCart(soap, &soap_tmp___lkf1__deleteShoppingCart);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__deleteShoppingCart(soap, &soap_tmp___lkf1__deleteShoppingCart, "-lkf1:deleteShoppingCart", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__deleteShoppingCart(soap, &soap_tmp___lkf1__deleteShoppingCart, "-lkf1:deleteShoppingCart", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__deleteShoppingCart(struct soap *soap, lkf2__deleteShoppingCartResponse &lkf2__deleteShoppingCartResponse_)
{
	lkf2__deleteShoppingCartResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__deleteShoppingCartResponse_.soap_get(soap, "lkf2:deleteShoppingCartResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__getProductList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getProductList *lkf2__getProductList_, lkf2__getProductListResponse &lkf2__getProductListResponse_)
{	if (soap_send___lkf1__getProductList(soap, soap_endpoint, soap_action, lkf2__getProductList_) || soap_recv___lkf1__getProductList(soap, lkf2__getProductListResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__getProductList(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getProductList *lkf2__getProductList_)
{	struct __lkf1__getProductList soap_tmp___lkf1__getProductList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__getProductList.lkf2__getProductList_ = lkf2__getProductList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__getProductList(soap, &soap_tmp___lkf1__getProductList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__getProductList(soap, &soap_tmp___lkf1__getProductList, "-lkf1:getProductList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__getProductList(soap, &soap_tmp___lkf1__getProductList, "-lkf1:getProductList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__getProductList(struct soap *soap, lkf2__getProductListResponse &lkf2__getProductListResponse_)
{
	lkf2__getProductListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__getProductListResponse_.soap_get(soap, "lkf2:getProductListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__InsertClient(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__InsertClient *lkf2__InsertClient_, lkf2__InsertClientResponse &lkf2__InsertClientResponse_)
{	if (soap_send___lkf1__InsertClient(soap, soap_endpoint, soap_action, lkf2__InsertClient_) || soap_recv___lkf1__InsertClient(soap, lkf2__InsertClientResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__InsertClient(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__InsertClient *lkf2__InsertClient_)
{	struct __lkf1__InsertClient soap_tmp___lkf1__InsertClient;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__InsertClient.lkf2__InsertClient_ = lkf2__InsertClient_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__InsertClient(soap, &soap_tmp___lkf1__InsertClient);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__InsertClient(soap, &soap_tmp___lkf1__InsertClient, "-lkf1:InsertClient", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__InsertClient(soap, &soap_tmp___lkf1__InsertClient, "-lkf1:InsertClient", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__InsertClient(struct soap *soap, lkf2__InsertClientResponse &lkf2__InsertClientResponse_)
{
	lkf2__InsertClientResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__InsertClientResponse_.soap_get(soap, "lkf2:InsertClientResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__getOrderListHistory(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getOrderListHistory *lkf2__getOrderListHistory_, lkf2__getOrderListHistoryResponse &lkf2__getOrderListHistoryResponse_)
{	if (soap_send___lkf1__getOrderListHistory(soap, soap_endpoint, soap_action, lkf2__getOrderListHistory_) || soap_recv___lkf1__getOrderListHistory(soap, lkf2__getOrderListHistoryResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__getOrderListHistory(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__getOrderListHistory *lkf2__getOrderListHistory_)
{	struct __lkf1__getOrderListHistory soap_tmp___lkf1__getOrderListHistory;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__getOrderListHistory.lkf2__getOrderListHistory_ = lkf2__getOrderListHistory_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__getOrderListHistory(soap, &soap_tmp___lkf1__getOrderListHistory);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__getOrderListHistory(soap, &soap_tmp___lkf1__getOrderListHistory, "-lkf1:getOrderListHistory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__getOrderListHistory(soap, &soap_tmp___lkf1__getOrderListHistory, "-lkf1:getOrderListHistory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__getOrderListHistory(struct soap *soap, lkf2__getOrderListHistoryResponse &lkf2__getOrderListHistoryResponse_)
{
	lkf2__getOrderListHistoryResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__getOrderListHistoryResponse_.soap_get(soap, "lkf2:getOrderListHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___lkf1__updateHistory(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__updateHistory *lkf2__updateHistory_, lkf2__updateHistoryResponse &lkf2__updateHistoryResponse_)
{	if (soap_send___lkf1__updateHistory(soap, soap_endpoint, soap_action, lkf2__updateHistory_) || soap_recv___lkf1__updateHistory(soap, lkf2__updateHistoryResponse_))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___lkf1__updateHistory(struct soap *soap, const char *soap_endpoint, const char *soap_action, lkf2__updateHistory *lkf2__updateHistory_)
{	struct __lkf1__updateHistory soap_tmp___lkf1__updateHistory;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___lkf1__updateHistory.lkf2__updateHistory_ = lkf2__updateHistory_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___lkf1__updateHistory(soap, &soap_tmp___lkf1__updateHistory);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___lkf1__updateHistory(soap, &soap_tmp___lkf1__updateHistory, "-lkf1:updateHistory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___lkf1__updateHistory(soap, &soap_tmp___lkf1__updateHistory, "-lkf1:updateHistory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___lkf1__updateHistory(struct soap *soap, lkf2__updateHistoryResponse &lkf2__updateHistoryResponse_)
{
	lkf2__updateHistoryResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	lkf2__updateHistoryResponse_.soap_get(soap, "lkf2:updateHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
